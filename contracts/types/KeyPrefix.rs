#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]
pub enum KeyPrefix {
    Creator,
    Operational,
    Coef,
    Intercept,
    Commission,
    IsPublic,
    Owner,
    Treasury,
    ParticipationToken,
    NewOwner,
    NDistributions,
    DistributionInterval,
    FirstDistributionDate,
    PrevDistributionDate,
    Index,
    IsFirstDistribution,
    Prepay,
    Gas,
    UserCurrent,
    Distribution,
    SetOperational,
    SetRegressionCoef,
    SetRegressionIntercept,
    ExternalTokenExists,
    PoolName,
    LogicVersion,
    ProxyName,
    TokenSaleMarketCommission,
    TsmAddressPool,
    TsmAddressSeller,
    TsmSalePrice,
    TsmMinDivision,
    TsmApplyCommission,
    TsmLockedSale,
    BaseCommissionPool,
    BaseCommissionTsm,
    GasPrice,
    PmConfig,
    GoalAmount,
    PoolType,
}

impl KeyPrefix {
    /// Convierte un índice (u8) en una variante del enum KeyPrefix
    pub fn from_u8(value: u8) -> Option<Self> {
        match value {
            0 => Some(KeyPrefix::Creator),
            1 => Some(KeyPrefix::Operational),
            2 => Some(KeyPrefix::Coef),
            3 => Some(KeyPrefix::Intercept),
            4 => Some(KeyPrefix::Commission),
            5 => Some(KeyPrefix::IsPublic),
            6 => Some(KeyPrefix::Owner),
            7 => Some(KeyPrefix::Treasury),
            8 => Some(KeyPrefix::ParticipationToken),
            9 => Some(KeyPrefix::NewOwner),
            10 => Some(KeyPrefix::NDistributions),
            11 => Some(KeyPrefix::DistributionInterval),
            12 => Some(KeyPrefix::FirstDistributionDate),
            13 => Some(KeyPrefix::PrevDistributionDate),
            14 => Some(KeyPrefix::Index),
            15 => Some(KeyPrefix::IsFirstDistribution),
            16 => Some(KeyPrefix::Prepay),
            17 => Some(KeyPrefix::Gas),
            18 => Some(KeyPrefix::UserCurrent),
            19 => Some(KeyPrefix::Distribution),
            20 => Some(KeyPrefix::SetOperational),
            21 => Some(KeyPrefix::SetRegressionCoef),
            22 => Some(KeyPrefix::SetRegressionIntercept),
            23 => Some(KeyPrefix::ExternalTokenExists),
            24 => Some(KeyPrefix::PoolName),
            25 => Some(KeyPrefix::LogicVersion),
            26 => Some(KeyPrefix::ProxyName),
            27 => Some(KeyPrefix::TokenSaleMarketCommission),
            28 => Some(KeyPrefix::TsmAddressPool),
            29 => Some(KeyPrefix::TsmAddressSeller),
            30 => Some(KeyPrefix::TsmSalePrice),
            31 => Some(KeyPrefix::TsmMinDivision),
            32 => Some(KeyPrefix::TsmApplyCommission),
            33 => Some(KeyPrefix::TsmLockedSale),
            34 => Some(KeyPrefix::BaseCommissionPool),
            35 => Some(KeyPrefix::BaseCommissionTsm),
            36 => Some(KeyPrefix::GasPrice),
            37 => Some(KeyPrefix::PmConfig),
            38 => Some(KeyPrefix::GoalAmount),
            39 => Some(KeyPrefix::PoolType),
            _ => None,
        }
    }

    /// Convierte una variante del enum KeyPrefix a su índice (u8)
    pub fn as_u8(self) -> u8 {
        match self {
            KeyPrefix::Creator => 0,
            KeyPrefix::Operational => 1,
            KeyPrefix::Coef => 2,
            KeyPrefix::Intercept => 3,
            KeyPrefix::Commission => 4,
            KeyPrefix::IsPublic => 5,
            KeyPrefix::Owner => 6,
            KeyPrefix::Treasury => 7,
            KeyPrefix::ParticipationToken => 8,
            KeyPrefix::NewOwner => 9,
            KeyPrefix::NDistributions => 10,
            KeyPrefix::DistributionInterval => 11,
            KeyPrefix::FirstDistributionDate => 12,
            KeyPrefix::PrevDistributionDate => 13,
            KeyPrefix::Index => 14,
            KeyPrefix::IsFirstDistribution => 15,
            KeyPrefix::Prepay => 16,
            KeyPrefix::Gas => 17,
            KeyPrefix::UserCurrent => 18,
            KeyPrefix::Distribution => 19,
            KeyPrefix::SetOperational => 20,
            KeyPrefix::SetRegressionCoef => 21,
            KeyPrefix::SetRegressionIntercept => 22,
            KeyPrefix::ExternalTokenExists => 23,
            KeyPrefix::PoolName => 24,
            KeyPrefix::LogicVersion => 25,
            KeyPrefix::ProxyName => 26,
            KeyPrefix::TokenSaleMarketCommission => 27,
            KeyPrefix::TsmAddressPool => 28,
            KeyPrefix::TsmAddressSeller => 29,
            KeyPrefix::TsmSalePrice => 30,
            KeyPrefix::TsmMinDivision => 31,
            KeyPrefix::TsmApplyCommission => 32,
            KeyPrefix::TsmLockedSale => 33,
            KeyPrefix::BaseCommissionPool => 34,
            KeyPrefix::BaseCommissionTsm => 35,
            KeyPrefix::GasPrice => 36,
            KeyPrefix::PmConfig => 37,
            KeyPrefix::GoalAmount => 38,
            KeyPrefix::PoolType => 39,
        }
    }
}
